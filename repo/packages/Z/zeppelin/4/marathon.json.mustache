{
    "id": "/zeppelin",
    "container": {
        "type": "DOCKER",
        "docker": {
            "image": "{{resource.assets.container.docker.zeppelin}}",
            "network": "HOST"
        }
    },
    "healthChecks": [{
        "protocol": "TCP",
        "gracePeriodSeconds": 300,
        "intervalSeconds": 60,
        "portIndex": 0,
        "timeoutSeconds": 15,
        "maxConsecutiveFailures": 3
    }],
    "labels": {
        "DCOS_SERVICE_NAME": "{{service.name}}",
        "DCOS_SERVICE_SCHEME": "http",
        "DCOS_SERVICE_PORT_INDEX": "0"
    },
    "env": {
        "SPARK_APP_NAME": "ZeppelinApp",
        "SPARK_SUBMIT_OPTIONS": "--conf spark.cores.max={{spark.cores_max}} --conf spark.executor.memory={{spark.executor_memory}} --conf spark.mesos.coarse=true --conf spark.mesos.executor.docker.image={{#spark.executor_docker_image}}{{spark.executor_docker_image}}{{/spark.executor_docker_image}}{{^spark.executor_docker_image}}{{resource.assets.container.docker.spark}}{{/spark.executor_docker_image}} --conf spark.mesos.executor.home=/opt/spark/dist",
        "ZEPPELIN_SPARK_USEHIVECONTEXT": "false"
    },
    "cmd": "sed \"s#<value>8080</value>#<value>$PORT0</value>#\" < conf/zeppelin-site.xml.template > conf/zeppelin-site.xml && sed -i \"s#<value>-1</value>#<value>$PORT1</value>#\" conf/zeppelin-site.xml && export SPARK_HOME=$(find ${MESOS_SANDBOX}/ -type d -name 'spark-*') && cp -f ${MESOS_SANDBOX}/hdfs-site.xml ${MESOS_SANDBOX}/core-site.xml /etc/hadoop/ && bin/zeppelin.sh start",
    "ports": [0, 0],
    "cpus": 1,
    "mem": 2048.0,
    "fetch": [
      {"uri": "{{#spark.uri}}{{spark.uri}}{{/spark.uri}}{{^spark.uri}}{{resource.assets.uris.spark}}{{/spark.uri}}", "cache": true},
      {"uri": "{{hdfs.config-url}}/hdfs-site.xml"},
      {"uri": "{{hdfs.config-url}}/core-site.xml"}
    ]
}
